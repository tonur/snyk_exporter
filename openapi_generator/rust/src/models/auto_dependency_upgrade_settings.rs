/*
 * Snyk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: REST
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AutoDependencyUpgradeSettings : Automatically create pull requests on recurring tests for dependencies as upgrades become available. If not specified, settings will be inherited from the Project's integration.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AutoDependencyUpgradeSettings {
    /// Dependencies which should NOT be included in an automatic upgrade operation.
    #[serde(rename = "ignored_dependencies", skip_serializing_if = "Option::is_none")]
    pub ignored_dependencies: Option<Vec<String>>,
    /// Automatically raise pull requests to update out-of-date dependencies.
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<bool>,
    /// Apply the auto dependency integration settings of the Organization to this project.
    #[serde(rename = "is_inherited", skip_serializing_if = "Option::is_none")]
    pub is_inherited: Option<bool>,
    /// Include major version in dependency upgrade recommendation.
    #[serde(rename = "is_major_upgrade_enabled", skip_serializing_if = "Option::is_none")]
    pub is_major_upgrade_enabled: Option<bool>,
    /// Limit of dependency upgrade PRs which can be opened simultaneously. When the limit is reached, no new upgrade PRs are created. If specified, must be between 1 and 10.
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<f32>,
    /// Minimum dependency maturity period in days. If specified, must be between 1 and 365.
    #[serde(rename = "minimum_age", skip_serializing_if = "Option::is_none")]
    pub minimum_age: Option<f32>,
}

impl AutoDependencyUpgradeSettings {
    /// Automatically create pull requests on recurring tests for dependencies as upgrades become available. If not specified, settings will be inherited from the Project's integration.
    pub fn new() -> AutoDependencyUpgradeSettings {
        AutoDependencyUpgradeSettings {
            ignored_dependencies: None,
            is_enabled: None,
            is_inherited: None,
            is_major_upgrade_enabled: None,
            limit: None,
            minimum_age: None,
        }
    }
}


