/*
 * Snyk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: REST
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Resource {
    /// Amount of IaC resources this resource maps to.
    #[serde(rename = "iac_mappings_count", skip_serializing_if = "Option::is_none")]
    pub iac_mappings_count: Option<i64>,
    /// Internal ID for a resource.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(rename = "input_type")]
    pub input_type: InputType,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// An optional native identifier for this resource. For example, a cloud resource id.
    #[serde(rename = "native_id", skip_serializing_if = "Option::is_none")]
    pub native_id: Option<String>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<String>,
    #[serde(rename = "resource_type", skip_serializing_if = "Option::is_none")]
    pub resource_type: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl Resource {
    pub fn new(input_type: InputType) -> Resource {
        Resource {
            iac_mappings_count: None,
            id: None,
            input_type,
            location: None,
            name: None,
            native_id: None,
            platform: None,
            resource_type: None,
            tags: None,
            r#type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InputType {
    #[serde(rename = "cloud_scan")]
    CloudScan,
    #[serde(rename = "arm")]
    Arm,
    #[serde(rename = "k8s")]
    K8s,
    #[serde(rename = "tf")]
    Tf,
    #[serde(rename = "tf_hcl")]
    TfHcl,
    #[serde(rename = "tf_plan")]
    TfPlan,
    #[serde(rename = "tf_state")]
    TfState,
    #[serde(rename = "cfn")]
    Cfn,
}

impl Default for InputType {
    fn default() -> InputType {
        Self::CloudScan
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "cloud")]
    Cloud,
    #[serde(rename = "iac")]
    Iac,
}

impl Default for Type {
    fn default() -> Type {
        Self::Cloud
    }
}

