/*
 * Snyk API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: REST
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateGroupServiceAccountRequestDataAttributes {
    /// The time, in seconds, that a generated access token will be valid for. Defaults to 1 hour if unset. Only used when auth_type is one of the oauth_* variants.
    #[serde(rename = "access_token_ttl_seconds", skip_serializing_if = "Option::is_none")]
    pub access_token_ttl_seconds: Option<f32>,
    /// Authentication strategy for the service account:   * api_key - Regular Snyk API Key.   * oauth_client_secret - OAuth2 client_credentials grant, which returns a client secret that can be used to retrieve an access token.   * oauth_private_key_jwt - OAuth2 client_credentials grant, using private_key_jwt client_assertion as laid out in OIDC Connect Core 1.0, section 9.
    #[serde(rename = "auth_type")]
    pub auth_type: AuthType,
    /// A JWKs URL hosting your public keys, used to verify signed JWT requests. Must be https. Required only when auth_type is oauth_private_key_jwt.
    #[serde(rename = "jwks_url", skip_serializing_if = "Option::is_none")]
    pub jwks_url: Option<String>,
    /// A human-friendly name for the service account.
    #[serde(rename = "name")]
    pub name: String,
    /// The ID of the role which the created service account should use.
    #[serde(rename = "role_id")]
    pub role_id: uuid::Uuid,
}

impl CreateGroupServiceAccountRequestDataAttributes {
    pub fn new(auth_type: AuthType, name: String, role_id: uuid::Uuid) -> CreateGroupServiceAccountRequestDataAttributes {
        CreateGroupServiceAccountRequestDataAttributes {
            access_token_ttl_seconds: None,
            auth_type,
            jwks_url: None,
            name,
            role_id,
        }
    }
}

/// Authentication strategy for the service account:   * api_key - Regular Snyk API Key.   * oauth_client_secret - OAuth2 client_credentials grant, which returns a client secret that can be used to retrieve an access token.   * oauth_private_key_jwt - OAuth2 client_credentials grant, using private_key_jwt client_assertion as laid out in OIDC Connect Core 1.0, section 9.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuthType {
    #[serde(rename = "api_key")]
    ApiKey,
    #[serde(rename = "oauth_client_secret")]
    OauthClientSecret,
    #[serde(rename = "oauth_private_key_jwt")]
    OauthPrivateKeyJwt,
}

impl Default for AuthType {
    fn default() -> AuthType {
        Self::ApiKey
    }
}

